def проверить_геометрическую_прогрессию(список):
  """
  Проверяет, является ли список ненулевых целых чисел геометрической прогрессией.

  Args:
    список: Список ненулевых целых чисел.

  Returns:
    Знаменатель прогрессии, если список является геометрической прогрессией.
    0, если список не является геометрической прогрессией или пуст.
  """

  if not список:
    return 0  # Пустой список не образует прогрессию

  n = len(список)
  if n == 1:
    return 1  # Список из одного элемента можно считать прогрессией с любым знаменателем

  # Вычисляем возможный знаменатель по первым двум элементам
  q = список[1] / список[0]

  # Проверяем, является ли знаменатель целым числом
  if not q.is_integer():
    return 0

  q = int(q) # Преобразуем к целому, т.к. все элементы списка - целые числа

  # Проверяем, что все остальные элементы списка соответствуют прогрессии
  for i in range(2, n):
    if список[i] != список[i-1] * q:
      return 0

  return q  # Возвращаем знаменатель прогрессии


# Пример использования
список1 = [2, 4, 8, 16, 32]
список2 = [3, 6, 12, 25, 50]
список3 = [5]
список4 = []
список5 = [1, -2, 4, -8]
список6 = [2,3]
список7 = [1, 2, 4.5] # не целые числа

print(f"Список {список1}: Знаменатель = {проверить_геометрическую_прогрессию(список1)}")  # 2
print(f"Список {список2}: Знаменатель = {проверить_геометрическую_прогрессию(список2)}")  # 0
print(f"Список {список3}: Знаменатель = {проверить_геометрическую_прогрессию(список3)}")  # 1
print(f"Список {список4}: Знаменатель = {проверить_геометрическую_прогрессию(список4)}")  # 0
print(f"Список {список5}: Знаменатель = {проверить_геометрическую_прогрессию(список5)}")  # -2
print(f"Список {список6}: Знаменатель = {проверить_геометрическую_прогрессию(список6)}")  # 0
#print(f"Список {список7}: Знаменатель = {проверить_геометрическую_прогрессию(список7)}")  # Ошибка при проверке is_integer(), если не все числа в списке целые
